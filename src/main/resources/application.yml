server:
  port: 8123
  servlet:
    context-path: /api

spring:
  application:
    name: testx

  # Redis 配置
  redis:
    database: 0
    host: 127.0.0.1 # 部署时需要修改为远程host
    port: 6379
    timeout: 5000


  #  # 使用 GCP 提供的 Cloud SQL for MySQL 数据库
#  datasource:
##    name: ${DB_NAME:your_database_name}
##    username: ${DB_USER:your_db_user}
##    password: ${DB_PASS:your_db_password}
#    name: ${DB_NAME:testx}
#    username: ${DB_USER:yeran}
#    password: ${DB_PASS:123456}
#    hikari:
#      auto-commit: true
#      connection-test-query: SELECT 1
#
#  cloud:
#    gcp:
#      sql:
##        instance-connection-name: ${INSTANCE_CONNECTION_NAME:your-project:region:instance-name}
#        instance-connection-name: ${INSTANCE_CONNECTION_NAME:TestX:us-west1-a:instance-20250509-072054}
#        enabled: true
#
#  jpa:
#    hibernate:
#      ddl-auto: validate
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true
#        dialect: org.hibernate.dialect.MySQL8Dialect
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/testx
    username: root
    password: 12345678

# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "API Doc"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.it.testx.controller

# Google Cloud
gcp:
  project-id: testx-459207
  credentials-path: ./service-account-key.json

  # Cloud Storage
  storage:
    bucket: testx_bucket


# Custom JWT
jwt:
  issuer: issuer of the token
  audience: YOUR-CLIENT-ID
